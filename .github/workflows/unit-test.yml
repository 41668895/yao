name: UnitTest

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  YAO_DEV: ${{ github.WORKSPACE }}
  YAO_ENV: development
  YAO_ROOT: ${{ github.WORKSPACE }}/tests
  YAO_HOST: 0.0.0.0
  YAO_PORT: 5099
  YAO_SESSION: "memory"
  YAO_LOG: "./logs/application.log"
  YAO_LOG_MODE: "TEXT"
  YAO_JWT_SECRET: "bLp@bi!oqo-2U+hoTRUG"
  # YAO_DB_DRIVER: mysql
  # YAO_DB_PRIMARY: "root:123456@tcp(db-server:3308)/xiang?charset=utf8mb4&parseTime=True&loc=Local"
  # YAO_DB_SECONDARY: "root:123456@tcp(db-server:3308)/xiang?charset=utf8mb4&parseTime=True&loc=Local"
  YAO_DB_AESKEY: "ZLX=T&f6refeCh-ro*r@"

  ROOT_PLUGIN: ${{ github.WORKSPACE }}/../../../data/gou-unit/plugins

  # 象传服务配置
  # XIANG_MODE: debug
  # XIANG_SOURCE: ${{ github.WORKSPACE }}
  # XIANG_ROOT: ${{ github.WORKSPACE }}/tests
  # XIANG_ROOT_PLUGIN: ${{ github.WORKSPACE }}/../../../data/gou-unit/plugins

  # 服务配置
  # XIANG_SERVICE_DEBUG: true
  # XIANG_SERVICE_ALLOW: "xiang.yao.run:3000|xiang.yao.run:3001"
  # XIANG_SERVICE_HOST: 0.0.0.0
  # XIANG_SERVICE_PORT: 5099

  # 数据库配置
  # XIANG_DB_DEBUG: true
  # XIANG_DB_DRIVER: "mysql"
  # XIANG_DB_AESKEY: "ZLX:XzT&f6refeCh-ro*r@"

  # JWT配置
  # XIANG_JWT_DEBUG: true
  # XIANG_JWT_SECRET: "bLp@bi!oqo-2U+hoTRUG"

  # 存储配置
  # XIANG_STOR_DEBUG: true
  # XIANG_STOR_PATH: "fs://${{ github.WORKSPACE }}/upload"

  # 日志配置
  # XIANG_LOG_ACCESS: "fs://${{ github.WORKSPACE }}/logs/access.log"
  # XIANG_LOG_ERROR: "fs://${{ github.WORKSPACE }}/logs/error.log"
  # XIANG_LOG_DB: "fs://${{ github.WORKSPACE }}/logs/db.log"
  # XIANG_LOG_PLUGIN: "fs://${{ github.WORKSPACE }}/logs/plugin.log"

jobs:
  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [1.17]
        db: [MySQL8.0, MySQL5.7, SQLite3]
    steps:
      - name: Setup Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Checkout Kun
        uses: actions/checkout@v2
        with:
          repository: yaoapp/kun
          path: kun

      - name: Checkout Xun
        uses: actions/checkout@v2
        with:
          repository: yaoapp/xun
          path: xun

      - name: Checkout Gou
        uses: actions/checkout@v2
        with:
          repository: yaoapp/gou
          path: gou
          token: ${{ secrets.TOKEN }}

      - name: Move Kun, Xun, Gou
        run: |
          mv kun ../
          mv xun ../
          mv gou ../
          ls -l .
          ls -l ../

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup ${{ matrix.db }}
        uses: ./.github/actions/setup-db
        with:
          kind: "${{ matrix.db }}"
          db: "xiang"
          user: "xiang"
          password: ${{ secrets.UNIT_PASS }}

      - name: Setup Go ${{ matrix.go }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Setup Go Tools
        run: |
          if [[ "${GO111MODULE}" = "on" ]]; then go mod download; fi
          if [[ "${GO111MODULE}" = "on" ]]; then export PATH="${GOPATH}/bin:${GOROOT}/bin:${PATH}"; fi
          if [[ "${GO111MODULE}" = "on" ]]; then make tools; fi

      - name: Setup ENV & Host
        env:
          PASSWORD: ${{ secrets.UNIT_PASS }}
        run: |
          sudo echo "127.0.0.1 local.iqka.com" | sudo tee -a /etc/hosts 
          echo "YAO_DB_DRIVER=$DB_DRIVER" >> $GITHUB_ENV
          echo "GITHUB_WORKSPACE:\n" && ls -l $GITHUB_WORKSPACE

          if [ "$DB_DRIVER" = "mysql" ]; then
            echo "YAO_DB_PRIMARY=$DB_USER:$PASSWORD@$DB_HOST" >> $GITHUB_ENV
          elif [ "$DB_DRIVER" = "postgres" ]; then
            echo "YAO_DB_PRIMARY=postgres://$DB_USER:$PASSWORD@$DB_HOST" >> $GITHUB_ENV
          else
            echo "YAO_DB_PRIMARY=$YAO_ROOT/$DB_HOST" >> $GITHUB_ENV
          fi

          echo ".:\n" && ls -l .
          echo "..:\n" && ls -l ..
          ping -c 1 -t 1 local.iqka.com

      - name: Test Prepare
        run: |
          make vet
          make fmt-check
          make misspell-check
          make plugin
          mkdir -p $YAO_ROOT/tests/plugins/
          mv $ROOT_PLUGIN/user.so $YAO_ROOT/tests/plugins/
          ls -l $YAO_ROOT/tests/plugins/
          make migrate

      - name: Run test
        run: |
          make test

      - name: Codecov Report
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
